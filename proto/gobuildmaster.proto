syntax = "proto3";

package gobuildmaster;

import "github.com/brotherlogic/gobuildslave/proto/slave.proto";

option go_package = "github.com/brotherlogic/gobuildmaster/proto";

message Config {
  repeated Intent intents = 1;
  repeated NIntent nintents = 2;
}

enum Redundancy {
  UNKNOWN = 0;
  SOLO = 1;
  REDUNDANT = 2;
  GLOBAL = 3;
}

message Intent {
  gobuildslave.JobSpec spec = 1;
  int32 count = 2;
}

message NIntent {
  gobuildslave.Job job = 1;
  int32 count = 2;
  Redundancy redundancy = 3;
  Redundancy redundancy64 = 6;
  bool no_master = 4;
  string not_on_server = 5;
}

message Empty {}

message CompareResponse {
  Config current = 1;
  Config desired = 2;
}

message GetDecisionsRequest {}
message GetDecisionsResponse {
  repeated Decision decisions = 1;
}

message Decision {
  string job_name = 1;
  bool running = 2;
  string reason = 3;
}

message ClaimRequest {
  string server = 1;
  string job_name = 2;
}

message ClaimResponse {

}

service GoBuildMaster {
	rpc Compare(Empty) returns (CompareResponse) {};
  rpc GetDecisions(GetDecisionsRequest) returns (GetDecisionsResponse) {};
  rpc Claim(ClaimRequest) returns (ClaimResponse) {};
}
