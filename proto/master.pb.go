// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master.proto

/*
Package gobuildmaster is a generated protocol buffer package.

It is generated from these files:
	master.proto

It has these top-level messages:
	Config
	Intent
	NIntent
	Empty
	CompareResponse
*/
package gobuildmaster

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gobuildslave "github.com/brotherlogic/gobuildslave/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Intents  []*Intent  `protobuf:"bytes,1,rep,name=intents" json:"intents,omitempty"`
	Nintents []*NIntent `protobuf:"bytes,2,rep,name=nintents" json:"nintents,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetIntents() []*Intent {
	if m != nil {
		return m.Intents
	}
	return nil
}

func (m *Config) GetNintents() []*NIntent {
	if m != nil {
		return m.Nintents
	}
	return nil
}

type Intent struct {
	Spec  *gobuildslave.JobSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	Count int32                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *Intent) Reset()                    { *m = Intent{} }
func (m *Intent) String() string            { return proto.CompactTextString(m) }
func (*Intent) ProtoMessage()               {}
func (*Intent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Intent) GetSpec() *gobuildslave.JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Intent) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type NIntent struct {
	Job   *gobuildslave.Job `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
	Count int32             `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *NIntent) Reset()                    { *m = NIntent{} }
func (m *NIntent) String() string            { return proto.CompactTextString(m) }
func (*NIntent) ProtoMessage()               {}
func (*NIntent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NIntent) GetJob() *gobuildslave.Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *NIntent) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CompareResponse struct {
	Current *Config `protobuf:"bytes,1,opt,name=current" json:"current,omitempty"`
	Desired *Config `protobuf:"bytes,2,opt,name=desired" json:"desired,omitempty"`
}

func (m *CompareResponse) Reset()                    { *m = CompareResponse{} }
func (m *CompareResponse) String() string            { return proto.CompactTextString(m) }
func (*CompareResponse) ProtoMessage()               {}
func (*CompareResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CompareResponse) GetCurrent() *Config {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *CompareResponse) GetDesired() *Config {
	if m != nil {
		return m.Desired
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "gobuildmaster.Config")
	proto.RegisterType((*Intent)(nil), "gobuildmaster.Intent")
	proto.RegisterType((*NIntent)(nil), "gobuildmaster.NIntent")
	proto.RegisterType((*Empty)(nil), "gobuildmaster.Empty")
	proto.RegisterType((*CompareResponse)(nil), "gobuildmaster.CompareResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoBuildMaster service

type GoBuildMasterClient interface {
	Compare(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CompareResponse, error)
}

type goBuildMasterClient struct {
	cc *grpc.ClientConn
}

func NewGoBuildMasterClient(cc *grpc.ClientConn) GoBuildMasterClient {
	return &goBuildMasterClient{cc}
}

func (c *goBuildMasterClient) Compare(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CompareResponse, error) {
	out := new(CompareResponse)
	err := grpc.Invoke(ctx, "/gobuildmaster.GoBuildMaster/Compare", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoBuildMaster service

type GoBuildMasterServer interface {
	Compare(context.Context, *Empty) (*CompareResponse, error)
}

func RegisterGoBuildMasterServer(s *grpc.Server, srv GoBuildMasterServer) {
	s.RegisterService(&_GoBuildMaster_serviceDesc, srv)
}

func _GoBuildMaster_Compare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoBuildMasterServer).Compare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gobuildmaster.GoBuildMaster/Compare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoBuildMasterServer).Compare(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoBuildMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gobuildmaster.GoBuildMaster",
	HandlerType: (*GoBuildMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compare",
			Handler:    _GoBuildMaster_Compare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master.proto",
}

func init() { proto.RegisterFile("master.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xed, 0xe6, 0x56, 0x79, 0x3a, 0xc4, 0x30, 0x65, 0xec, 0x20, 0xa3, 0x5e, 0xe6, 0xa5,
	0x85, 0x09, 0xde, 0x75, 0x8a, 0x4c, 0xd0, 0x43, 0xfc, 0x04, 0x6b, 0xf7, 0xec, 0x22, 0x6b, 0x5e,
	0x48, 0x52, 0xc1, 0x6f, 0x2f, 0x4d, 0x32, 0x71, 0x1d, 0xbb, 0xb5, 0xc9, 0xef, 0xf7, 0x7f, 0xff,
	0xbe, 0xc2, 0x59, 0xb5, 0x34, 0x16, 0x75, 0xaa, 0x34, 0x59, 0x62, 0x83, 0x92, 0xf2, 0x5a, 0x6c,
	0x56, 0xfe, 0x70, 0x7c, 0x5f, 0x0a, 0xbb, 0xae, 0xf3, 0xb4, 0xa0, 0x2a, 0xcb, 0x35, 0xd9, 0x35,
	0xea, 0x0d, 0x95, 0xa2, 0xc8, 0x02, 0x66, 0x36, 0xcb, 0x6f, 0xcc, 0x9c, 0x9a, 0xb9, 0x67, 0x1f,
	0x93, 0x54, 0xd0, 0x9f, 0x93, 0xfc, 0x14, 0x25, 0xcb, 0x20, 0x16, 0xd2, 0xa2, 0xb4, 0x66, 0x14,
	0x4d, 0xba, 0xd3, 0xd3, 0xd9, 0x65, 0xba, 0x33, 0x22, 0x5d, 0xb8, 0x5b, 0xbe, 0xa5, 0xd8, 0x0c,
	0x4e, 0xe4, 0xd6, 0xe8, 0x38, 0xe3, 0xaa, 0x65, 0xbc, 0x07, 0xe5, 0x8f, 0x4b, 0x16, 0xd0, 0xf7,
	0x67, 0xec, 0x16, 0x8e, 0x8d, 0xc2, 0x62, 0x14, 0x4d, 0xa2, 0xff, 0xb3, 0x7c, 0xb7, 0x57, 0xca,
	0x3f, 0x14, 0x16, 0xdc, 0x21, 0x6c, 0x08, 0xbd, 0x82, 0x6a, 0x69, 0x47, 0x9d, 0x49, 0x34, 0xed,
	0x71, 0xff, 0x92, 0x3c, 0x41, 0x1c, 0xf2, 0xd9, 0x0d, 0x74, 0xbf, 0x28, 0x0f, 0x51, 0x17, 0x7b,
	0x51, 0xbc, 0xb9, 0x3d, 0x90, 0x12, 0x43, 0xef, 0xb9, 0x52, 0xf6, 0x27, 0x31, 0x70, 0x3e, 0xa7,
	0x4a, 0x2d, 0x35, 0x72, 0x34, 0x8a, 0xa4, 0xc1, 0x66, 0x23, 0x45, 0xad, 0x35, 0x4a, 0xdb, 0x6e,
	0x19, 0xbe, 0xcf, 0x6f, 0x8e, 0x6f, 0xa9, 0x46, 0x58, 0xa1, 0x11, 0x1a, 0x57, 0x6e, 0xc8, 0x61,
	0x21, 0x50, 0x33, 0x0e, 0x83, 0x17, 0x7a, 0x6c, 0x80, 0x37, 0x07, 0xb0, 0x07, 0x88, 0x43, 0x0b,
	0x36, 0x6c, 0xb9, 0xae, 0xe6, 0xf8, 0x7a, 0x2f, 0x71, 0xa7, 0x73, 0x72, 0x94, 0xf7, 0xdd, 0x8f,
	0xbd, 0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x20, 0x14, 0xa8, 0x9d, 0x2f, 0x02, 0x00, 0x00,
}
